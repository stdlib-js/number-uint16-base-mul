{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport imul from '@stdlib/number-int32-base-mul';\n\n\n// VARIABLES //\n\n// 0xFFFF = 65535 => 0000000000000000 11111111 11111111\nvar MASK = 0xFFFF;\n\n\n// MAIN //\n\n/**\n* Multiplies two unsigned 16-bit integers `x` and `y`.\n*\n* @param {integer} x - first input value\n* @param {integer} y - second input value\n* @returns {integer} result\n*\n* @example\n* var v = mul( 5, 1 );\n* // returns 5\n*\n* @example\n* var v = mul( 5, 2 );\n* // returns 10\n*\n* @example\n* var v = mul( 5, 0 );\n* // returns 0\n*/\nfunction mul( x, y ) {\n\t// Cast `x` and `y` to signed 32-bit integers and apply a mask which keeps only the lowest 16 bits:\n\treturn imul( x|0, y|0 ) & MASK; // 65535^2 = 42949365225, which overflows signed 32-bit integer; however, by using `imul`, we emulate C-like two's complement wraparound semantics, which allows us to just keep the last 16-bits\n}\n\n\n// EXPORTS //\n\nexport default mul;\n"],"names":["mul","x","y","imul"],"mappings":";;yFAoDA,SAASA,EAAKC,EAAGC,GAEhB,OA1BU,MA0BHC,EAAQ,EAAFF,EAAO,EAAFC,EACnB"}